{
	"info": {
		"_postman_id": "af1c9043-363d-41f0-9f30-ce65fec97c99",
		"name": "Contract Testing",
		"description": "# About this collection\n\nThis collection helps you set up contract tests to ensure that two separate systems are compatible and can communicate with one another.\n\n## **Using the collection**\n\n**Step 1:** Send the sample requests and view the response and test results.\n\n**Step 2:** Replace the sample request URLs with your desired API endpoints.\n\n**Step 3:** Customize the tests in the \"Tests\" tab if needed. Don't forget to save your changes.\n\n### Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)\n\n[  \n](https://postman.postman.co/documentation/24552533-5bead607-0197-4e1d-87d4-3160bc7631c1?entity=&branch=&version=)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34459124"
	},
	"item": [
		{
			"name": "Test Response",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response code should be 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Validate that the response is json object",
							"pm.test(\"Response is a json object\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object');",
							"});",
							"",
							"// Validate that the response has an arg object",
							"pm.test(\"Response to have 'arg' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('args');",
							"});",
							"",
							"// Validate that the response has headers object",
							"pm.test(\"Response to have 'headers' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('headers');",
							"});",
							"",
							"// Validate that the response has url property",
							"pm.test(\"Response to have 'url' property\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('url');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/recipes/search?query=Indian",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"recipes",
						"search"
					],
					"query": [
						{
							"key": "query",
							"value": "Indian"
						}
					]
				},
				"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/users/register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"newuser\",\r\n    \"password\": \"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/users/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/users/login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"newuser\",\r\n    \"password\": \"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/recipes/66281ce7aff0f6618f3f72ab/ratings",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rating\": 5,\r\n    \"user\": \"newuser\",\r\n    \"review\": \"This recipe is fantastic!\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/recipes/66281ce7aff0f6618f3f72ab/ratings",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"recipes",
						"66281ce7aff0f6618f3f72ab",
						"ratings"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/recipes/",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/recipes/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"recipes",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/recipes/details/647830",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/recipes/details/647830",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"recipes",
						"details",
						"647830"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/recipes/",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/recipes/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"recipes",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/recipes/information/66281ce7aff0f6618f3f72c4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/recipes/information/66281ce7aff0f6618f3f72c4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"recipes",
						"information",
						"66281ce7aff0f6618f3f72c4"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/recipes/details/66281ce7aff0f6618f3f72c4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/recipes/details/66281ce7aff0f6618f3f72c4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"recipes",
						"details",
						"66281ce7aff0f6618f3f72c4"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/api/recipes/66281ce7aff0f6618f3f72c4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/recipes/66281ce7aff0f6618f3f72c4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"recipes",
						"66281ce7aff0f6618f3f72c4"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://postman-echo.com"
		}
	]
}