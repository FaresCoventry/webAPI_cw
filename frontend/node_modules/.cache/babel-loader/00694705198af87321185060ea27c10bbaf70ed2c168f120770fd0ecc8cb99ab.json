{"ast":null,"code":"// // RecipeDetail.jsx\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//   const [recipe, setRecipe] = useState(null);\n//   const { id } = useParams(); // This hooks allow us to access the URL parameters\n\n//   useEffect(() => {\n//     async function fetchRecipe() {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/recipes/${id}`);\n//         setRecipe(response.data);\n//       } catch (error) {\n//         console.error('Failed to fetch recipe details:', error);\n//       }\n//     }\n\n//     fetchRecipe();\n//   }, [id]); // This effect runs when the `id` changes\n\n//   if (!recipe) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>{recipe.name}</h1>\n//       <p>{recipe.description}</p>\n//       {/* Display other recipe details */}\n//     </div>\n//   );\n// }\n\n// export default RecipeDetail;\n\n// BEST ONE SO FAR BELOW THIS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//   const { id } = useParams();\n//   const [recipeCard, setRecipeCard] = useState(null);\n//   const [recipeDetails, setRecipeDetails] = useState(null);\n\n//   useEffect(() => {\n//     const fetchRecipeDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\n//         setRecipeCard(response.data);\n//       } catch (error) {\n//         console.error('Failed to fetch recipe details:', error);\n//       }\n//     };\n\n//     const fetchRecipeInformation = async () => {\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n//       setRecipeDetails(infoResponse.data);\n//     };\n\n//     fetchRecipeDetails();\n//     fetchRecipeInformation();\n//   }, [id]);\n\n//   if (!recipeCard) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Recipe Details</h1>\n//       {/* Assuming recipeCard contains a URL to an image of the recipe */}\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\n\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\n//       <p>Nutritional Information:</p>\n//       <ul>\n//         {recipeDetails.nutrition.nutrients.map(nutrient => (\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\n//         ))}\n//       </ul>\n//       <p>Shopping List:</p>\n//       <ul>\n//         {recipeDetails.extendedIngredients.map(ing => (\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default RecipeDetail;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//   const { id } = useParams();\n//   const [recipeDetails, setRecipeDetails] = useState(null);\n//   const [recipeCard, setRecipeCard] = useState(null);\n\n//   useEffect(() => {\n//     const fetchRecipeCard = async () => {\n//       const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\n//       setRecipeCard(cardResponse.data);\n//     };\n//     const fetchRecipeInformation = async () => {\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n//       setRecipeDetails(infoResponse.data);\n//     };\n\n//     fetchRecipeCard();\n//     fetchRecipeInformation();\n//   }, [id]);\n\n//   // Helper function to filter out only the nutrients we are interested in\n//   const getImportantNutrients = (nutrients) => {\n//     const needed = [\"Calories\", \"Protein\", \"Carbohydrates\", \"Fat\"];\n//     return nutrients.filter(nutrient => needed.includes(nutrient.title));\n//   };\n\n//   if (!recipeDetails || !recipeCard) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const importantNutrients = recipeDetails ? getImportantNutrients(recipeDetails.nutrition.nutrients) : [];\n\n//   return (\n//     <div>\n//       <h1>Recipe Details</h1>\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\n//       <p>Health Score: {recipeDetails.healthScore}</p>\n//       <p>Nutritional Information:</p>\n//       <ul>\n//         {importantNutrients.map(nutrient => (\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\n//         ))}\n//       </ul>\n//       <p>Ingredients:</p>\n//       <ul>\n//         {recipeDetails.extendedIngredients.map(ing => (\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default RecipeDetail;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//     const { id } = useParams();\n//     const [recipeDetails, setRecipeDetails] = useState(null);\n//     const [recipeCard, setRecipeCard] = useState(null);\n\n//     useEffect(() => {\n//         const fetchRecipeCard = async () => {\n//             const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\n//             setRecipeCard(cardResponse.data);\n//         };\n\n//         const fetchRecipeInformation = async () => {\n//             const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n//             if (infoResponse.data && infoResponse.data.nutrition && infoResponse.data.nutrition.nutrients) {\n//                 const nutrients = infoResponse.data.nutrition.nutrients;\n//                 const nutrition = {\n//                     calories: nutrients.find(n => n.title === 'Calories')?.amount,\n//                     protein: nutrients.find(n => n.title === 'Protein')?.amount,\n//                     carbs: nutrients.find(n => n.title === 'Carbohydrates')?.amount,\n//                     fats: nutrients.find(n => n.title === 'Fat')?.amount\n//                 };\n//                 infoResponse.data.nutritionInfo = nutrition;  // Append the simplified nutrition info to the response data\n//             }\n//             setRecipeDetails(infoResponse.data);\n//         };\n\n//         fetchRecipeCard();\n//         fetchRecipeInformation();\n//     }, [id]);\n\n//     if (!recipeDetails || !recipeCard) {\n//         return <div>Loading...</div>;\n//     }\n\n//     return (\n//         <div>\n//             <h1>Recipe Details</h1>\n//             <img src={recipeCard.url} alt=\"Recipe Card\" />\n//             <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\n//             <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\n//             <p>Health Score: {recipeDetails.healthScore}</p>\n//             <p>Nutritional Information:</p>\n//             {recipeDetails.nutritionInfo && (\n//                 <ul>\n//                     <li>Calories: {recipeDetails.nutritionInfo.calories}</li>\n//                     <li>Protein: {recipeDetails.nutritionInfo.protein}</li>\n//                     <li>Carbs: {recipeDetails.nutritionInfo.carbs}</li>\n//                     <li>Fats: {recipeDetails.nutritionInfo.fats}</li>\n//                 </ul>\n//             )}\n//             <p>Ingredients:</p>\n//             <ul>\n//                 {recipeDetails.extendedIngredients?.map(ing => (\n//                     <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n// export default RecipeDetail;","map":{"version":3,"names":[],"sources":["C:/Users/PC/Desktop/webAPI_cw/frontend/src/components/RecipeDetail.jsx"],"sourcesContent":["// // RecipeDetail.jsx\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//   const [recipe, setRecipe] = useState(null);\r\n//   const { id } = useParams(); // This hooks allow us to access the URL parameters\r\n\r\n//   useEffect(() => {\r\n//     async function fetchRecipe() {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/recipes/${id}`);\r\n//         setRecipe(response.data);\r\n//       } catch (error) {\r\n//         console.error('Failed to fetch recipe details:', error);\r\n//       }\r\n//     }\r\n\r\n//     fetchRecipe();\r\n//   }, [id]); // This effect runs when the `id` changes\r\n\r\n//   if (!recipe) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>{recipe.name}</h1>\r\n//       <p>{recipe.description}</p>\r\n//       {/* Display other recipe details */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n\r\n// BEST ONE SO FAR BELOW THIS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//   const { id } = useParams();\r\n//   const [recipeCard, setRecipeCard] = useState(null);\r\n//   const [recipeDetails, setRecipeDetails] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecipeDetails = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\r\n//         setRecipeCard(response.data);\r\n//       } catch (error) {\r\n//         console.error('Failed to fetch recipe details:', error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchRecipeInformation = async () => {\r\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n//       setRecipeDetails(infoResponse.data);\r\n//     };\r\n\r\n//     fetchRecipeDetails();\r\n//     fetchRecipeInformation();\r\n//   }, [id]);\r\n\r\n//   if (!recipeCard) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Recipe Details</h1>\r\n//       {/* Assuming recipeCard contains a URL to an image of the recipe */}\r\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\r\n\r\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\r\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\r\n//       <p>Nutritional Information:</p>\r\n//       <ul>\r\n//         {recipeDetails.nutrition.nutrients.map(nutrient => (\r\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\r\n//         ))}\r\n//       </ul>\r\n//       <p>Shopping List:</p>\r\n//       <ul>\r\n//         {recipeDetails.extendedIngredients.map(ing => (\r\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//   const { id } = useParams();\r\n//   const [recipeDetails, setRecipeDetails] = useState(null);\r\n//   const [recipeCard, setRecipeCard] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecipeCard = async () => {\r\n//       const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\r\n//       setRecipeCard(cardResponse.data);\r\n//     };\r\n//     const fetchRecipeInformation = async () => {\r\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n//       setRecipeDetails(infoResponse.data);\r\n//     };\r\n\r\n//     fetchRecipeCard();\r\n//     fetchRecipeInformation();\r\n//   }, [id]);\r\n\r\n//   // Helper function to filter out only the nutrients we are interested in\r\n//   const getImportantNutrients = (nutrients) => {\r\n//     const needed = [\"Calories\", \"Protein\", \"Carbohydrates\", \"Fat\"];\r\n//     return nutrients.filter(nutrient => needed.includes(nutrient.title));\r\n//   };\r\n\r\n//   if (!recipeDetails || !recipeCard) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   const importantNutrients = recipeDetails ? getImportantNutrients(recipeDetails.nutrition.nutrients) : [];\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Recipe Details</h1>\r\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\r\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\r\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\r\n//       <p>Health Score: {recipeDetails.healthScore}</p>\r\n//       <p>Nutritional Information:</p>\r\n//       <ul>\r\n//         {importantNutrients.map(nutrient => (\r\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\r\n//         ))}\r\n//       </ul>\r\n//       <p>Ingredients:</p>\r\n//       <ul>\r\n//         {recipeDetails.extendedIngredients.map(ing => (\r\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//     const { id } = useParams();\r\n//     const [recipeDetails, setRecipeDetails] = useState(null);\r\n//     const [recipeCard, setRecipeCard] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         const fetchRecipeCard = async () => {\r\n//             const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\r\n//             setRecipeCard(cardResponse.data);\r\n//         };\r\n\r\n//         const fetchRecipeInformation = async () => {\r\n//             const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n//             if (infoResponse.data && infoResponse.data.nutrition && infoResponse.data.nutrition.nutrients) {\r\n//                 const nutrients = infoResponse.data.nutrition.nutrients;\r\n//                 const nutrition = {\r\n//                     calories: nutrients.find(n => n.title === 'Calories')?.amount,\r\n//                     protein: nutrients.find(n => n.title === 'Protein')?.amount,\r\n//                     carbs: nutrients.find(n => n.title === 'Carbohydrates')?.amount,\r\n//                     fats: nutrients.find(n => n.title === 'Fat')?.amount\r\n//                 };\r\n//                 infoResponse.data.nutritionInfo = nutrition;  // Append the simplified nutrition info to the response data\r\n//             }\r\n//             setRecipeDetails(infoResponse.data);\r\n//         };\r\n\r\n//         fetchRecipeCard();\r\n//         fetchRecipeInformation();\r\n//     }, [id]);\r\n\r\n//     if (!recipeDetails || !recipeCard) {\r\n//         return <div>Loading...</div>;\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Recipe Details</h1>\r\n//             <img src={recipeCard.url} alt=\"Recipe Card\" />\r\n//             <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\r\n//             <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\r\n//             <p>Health Score: {recipeDetails.healthScore}</p>\r\n//             <p>Nutritional Information:</p>\r\n//             {recipeDetails.nutritionInfo && (\r\n//                 <ul>\r\n//                     <li>Calories: {recipeDetails.nutritionInfo.calories}</li>\r\n//                     <li>Protein: {recipeDetails.nutritionInfo.protein}</li>\r\n//                     <li>Carbs: {recipeDetails.nutritionInfo.carbs}</li>\r\n//                     <li>Fats: {recipeDetails.nutritionInfo.fats}</li>\r\n//                 </ul>\r\n//             )}\r\n//             <p>Ingredients:</p>\r\n//             <ul>\r\n//                 {recipeDetails.extendedIngredients?.map(ing => (\r\n//                     <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}