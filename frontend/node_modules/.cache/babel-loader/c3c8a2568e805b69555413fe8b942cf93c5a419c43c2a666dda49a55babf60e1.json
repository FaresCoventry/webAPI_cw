{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\webAPI_cw\\\\frontend\\\\src\\\\components\\\\RecipeDetail.jsx\",\n  _s = $RefreshSig$();\n// // RecipeDetail.jsx\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//   const [recipe, setRecipe] = useState(null);\n//   const { id } = useParams(); // This hooks allow us to access the URL parameters\n\n//   useEffect(() => {\n//     async function fetchRecipe() {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/recipes/${id}`);\n//         setRecipe(response.data);\n//       } catch (error) {\n//         console.error('Failed to fetch recipe details:', error);\n//       }\n//     }\n\n//     fetchRecipe();\n//   }, [id]); // This effect runs when the `id` changes\n\n//   if (!recipe) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>{recipe.name}</h1>\n//       <p>{recipe.description}</p>\n//       {/* Display other recipe details */}\n//     </div>\n//   );\n// }\n\n// export default RecipeDetail;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//   const { id } = useParams();\n//   const [recipeCard, setRecipeCard] = useState(null);\n//   const [recipeDetails, setRecipeDetails] = useState(null);\n\n//   useEffect(() => {\n//     const fetchRecipeDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\n//         setRecipeCard(response.data);\n//       } catch (error) {\n//         console.error('Failed to fetch recipe details:', error);\n//       }\n//     };\n\n//     const fetchRecipeInformation = async () => {\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n//       setRecipeDetails(infoResponse.data);\n//     };\n\n//     fetchRecipeDetails();\n//     fetchRecipeInformation();\n//   }, [id]);\n\n//   if (!recipeCard) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Recipe Details</h1>\n//       {/* Assuming recipeCard contains a URL to an image of the recipe */}\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\n\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\n//       <p>Nutritional Information:</p>\n//       <ul>\n//         {recipeDetails.nutrition.nutrients.map(nutrient => (\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\n//         ))}\n//       </ul>\n//       <p>Shopping List:</p>\n//       <ul>\n//         {recipeDetails.extendedIngredients.map(ing => (\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default RecipeDetail;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [recipeDetails, setRecipeDetails] = useState(null);\n  const [recipeCard, setRecipeCard] = useState(null);\n  useEffect(() => {\n    const fetchRecipeCard = async () => {\n      const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\n      setRecipeCard(cardResponse.data);\n    };\n    const fetchRecipeInformation = async () => {\n      const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n      setRecipeDetails(infoResponse.data);\n    };\n    fetchRecipeCard();\n    fetchRecipeInformation();\n  }, [id]);\n\n  // Helper function to filter out only the nutrients we are interested in\n  const getImportantNutrients = nutrients => {\n    const needed = [\"Calories\", \"Protein\", \"Carbohydrates\", \"Fat\"];\n    return nutrients.filter(nutrient => needed.includes(nutrient.title));\n  };\n  if (!recipeDetails || !recipeCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n  const importantNutrients = recipeDetails ? getImportantNutrients(recipeDetails.nutrition.nutrients) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: recipeCard.url,\n      alt: \"Recipe Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: recipeDetails.summary\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Difficulty: \", recipeDetails.veryHealthy ? 'Hard' : 'Easy']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Health Score: \", recipeDetails.healthScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nutritional Information:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: importantNutrients.map(nutrient => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [nutrient.title, \": \", nutrient.amount, nutrient.unit]\n      }, nutrient.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recipeDetails.extendedIngredients.map(ing => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [ing.name, \" (Quantity: \", ing.amount, \" \", ing.unit, \")\"]\n      }, ing.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeDetail, \"+f/XUEDWY0qkixz2wmeRsn+FNio=\", false, function () {\n  return [useParams];\n});\n_c = RecipeDetail;\nexport default RecipeDetail;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","RecipeDetail","_s","id","recipeDetails","setRecipeDetails","recipeCard","setRecipeCard","fetchRecipeCard","cardResponse","get","data","fetchRecipeInformation","infoResponse","getImportantNutrients","nutrients","needed","filter","nutrient","includes","title","children","fileName","_jsxFileName","lineNumber","columnNumber","importantNutrients","nutrition","src","url","alt","dangerouslySetInnerHTML","__html","summary","veryHealthy","healthScore","map","amount","unit","extendedIngredients","ing","name","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/webAPI_cw/frontend/src/components/RecipeDetail.jsx"],"sourcesContent":["// // RecipeDetail.jsx\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//   const [recipe, setRecipe] = useState(null);\r\n//   const { id } = useParams(); // This hooks allow us to access the URL parameters\r\n\r\n//   useEffect(() => {\r\n//     async function fetchRecipe() {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/recipes/${id}`);\r\n//         setRecipe(response.data);\r\n//       } catch (error) {\r\n//         console.error('Failed to fetch recipe details:', error);\r\n//       }\r\n//     }\r\n\r\n//     fetchRecipe();\r\n//   }, [id]); // This effect runs when the `id` changes\r\n\r\n//   if (!recipe) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>{recipe.name}</h1>\r\n//       <p>{recipe.description}</p>\r\n//       {/* Display other recipe details */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//   const { id } = useParams();\r\n//   const [recipeCard, setRecipeCard] = useState(null);\r\n//   const [recipeDetails, setRecipeDetails] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecipeDetails = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\r\n//         setRecipeCard(response.data);\r\n//       } catch (error) {\r\n//         console.error('Failed to fetch recipe details:', error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchRecipeInformation = async () => {\r\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n//       setRecipeDetails(infoResponse.data);\r\n//     };\r\n\r\n//     fetchRecipeDetails();\r\n//     fetchRecipeInformation();\r\n//   }, [id]);\r\n\r\n//   if (!recipeCard) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Recipe Details</h1>\r\n//       {/* Assuming recipeCard contains a URL to an image of the recipe */}\r\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\r\n\r\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\r\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\r\n//       <p>Nutritional Information:</p>\r\n//       <ul>\r\n//         {recipeDetails.nutrition.nutrients.map(nutrient => (\r\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\r\n//         ))}\r\n//       </ul>\r\n//       <p>Shopping List:</p>\r\n//       <ul>\r\n//         {recipeDetails.extendedIngredients.map(ing => (\r\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction RecipeDetail() {\r\n  const { id } = useParams();\r\n  const [recipeDetails, setRecipeDetails] = useState(null);\r\n  const [recipeCard, setRecipeCard] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipeCard = async () => {\r\n      const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\r\n      setRecipeCard(cardResponse.data);\r\n    };\r\n    const fetchRecipeInformation = async () => {\r\n      const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n      setRecipeDetails(infoResponse.data);\r\n    };\r\n\r\n    fetchRecipeCard();\r\n    fetchRecipeInformation();\r\n  }, [id]);\r\n\r\n  // Helper function to filter out only the nutrients we are interested in\r\n  const getImportantNutrients = (nutrients) => {\r\n    const needed = [\"Calories\", \"Protein\", \"Carbohydrates\", \"Fat\"];\r\n    return nutrients.filter(nutrient => needed.includes(nutrient.title));\r\n  };\r\n\r\n  if (!recipeDetails || !recipeCard) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const importantNutrients = recipeDetails ? getImportantNutrients(recipeDetails.nutrition.nutrients) : [];\r\n\r\n  return (\r\n    <div>\r\n      <h1>Recipe Details</h1>\r\n      <img src={recipeCard.url} alt=\"Recipe Card\" />\r\n      <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\r\n      <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\r\n      <p>Health Score: {recipeDetails.healthScore}</p>\r\n      <p>Nutritional Information:</p>\r\n      <ul>\r\n        {importantNutrients.map(nutrient => (\r\n          <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\r\n        ))}\r\n      </ul>\r\n      <p>Ingredients:</p>\r\n      <ul>\r\n        {recipeDetails.extendedIngredients.map(ing => (\r\n          <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}