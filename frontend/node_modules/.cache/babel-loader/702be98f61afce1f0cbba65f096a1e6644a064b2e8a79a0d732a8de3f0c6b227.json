{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\webAPI_cw\\\\frontend\\\\src\\\\components\\\\RecipeDetail.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//   const { id } = useParams();\n//   const [recipeCard, setRecipeCard] = useState(null);\n//   const [recipeDetails, setRecipeDetails] = useState(null);\n\n//   useEffect(() => {\n//     const fetchRecipeDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\n//         setRecipeCard(response.data);\n//       } catch (error) {\n//         console.error('Failed to fetch recipe details:', error);\n//       }\n//     };\n\n//     const fetchRecipeInformation = async () => {\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n//       setRecipeDetails(infoResponse.data);\n//     };\n\n//     fetchRecipeDetails();\n//     fetchRecipeInformation();\n//   }, [id]);\n\n//   if (!recipeCard) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Recipe Details</h1>\n//       {/* Assuming recipeCard contains a URL to an image of the recipe */}\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\n\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\n//       <p>Nutritional Information:</p>\n//       <ul>\n//         {recipeDetails.nutrition.nutrients.map(nutrient => (\n//           <li key={nutrient.name}>{nutrient.name}: {nutrient.amount} {nutrient.unit}</li>\n//         ))}\n//       </ul>\n//       <p>Shopping List:</p>\n//       <ul>\n//         {recipeDetails.extendedIngredients.map(ing => (\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default RecipeDetail;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [recipeDetails, setRecipeDetails] = useState(null);\n  const [newRating, setNewRating] = useState('');\n  const [newReview, setNewReview] = useState('');\n  useEffect(() => {\n    const fetchRecipeInformation = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n        setRecipeDetails(response.data);\n      } catch (error) {\n        console.error('Failed to fetch recipe information:', error);\n      }\n    };\n    fetchRecipeInformation();\n  }, [id]);\n  const submitRating = async () => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/recipes/${id}/ratings`, {\n        rating: parseInt(newRating),\n        user: 'Username',\n        // Replace with actual user data if available\n        review: newReview\n      });\n      // Append the new rating to the local state to update the UI immediately\n      setRecipeDetails({\n        ...recipeDetails,\n        ratings: [...recipeDetails.ratings, response.data]\n      });\n      setNewRating('');\n      setNewReview('');\n    } catch (error) {\n      console.error('Failed to post new rating:', error);\n    }\n  };\n  if (!recipeDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipeDetails.ratings.map((rating, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [rating.user, \": \", rating.rating, \" stars\", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: rating.review\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newRating,\n          onChange: e => setNewRating(e.target.value),\n          placeholder: \"Rate 1-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newReview,\n          onChange: e => setNewReview(e.target.value),\n          placeholder: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitRating,\n          children: \"Submit Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeDetail, \"4dX5pHI24qXzWs5zcMDay3slRto=\", false, function () {\n  return [useParams];\n});\n_c = RecipeDetail;\nexport default RecipeDetail;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","RecipeDetail","_s","id","recipeDetails","setRecipeDetails","newRating","setNewRating","newReview","setNewReview","fetchRecipeInformation","response","get","data","error","console","submitRating","post","rating","parseInt","user","review","ratings","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/webAPI_cw/frontend/src/components/RecipeDetail.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//   const { id } = useParams();\r\n//   const [recipeCard, setRecipeCard] = useState(null);\r\n//   const [recipeDetails, setRecipeDetails] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecipeDetails = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\r\n//         setRecipeCard(response.data);\r\n//       } catch (error) {\r\n//         console.error('Failed to fetch recipe details:', error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchRecipeInformation = async () => {\r\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n//       setRecipeDetails(infoResponse.data);\r\n//     };\r\n\r\n//     fetchRecipeDetails();\r\n//     fetchRecipeInformation();\r\n//   }, [id]);\r\n\r\n//   if (!recipeCard) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Recipe Details</h1>\r\n//       {/* Assuming recipeCard contains a URL to an image of the recipe */}\r\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\r\n\r\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\r\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\r\n//       <p>Nutritional Information:</p>\r\n//       <ul>\r\n//         {recipeDetails.nutrition.nutrients.map(nutrient => (\r\n//           <li key={nutrient.name}>{nutrient.name}: {nutrient.amount} {nutrient.unit}</li>\r\n//         ))}\r\n//       </ul>\r\n//       <p>Shopping List:</p>\r\n//       <ul>\r\n//         {recipeDetails.extendedIngredients.map(ing => (\r\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction RecipeDetail() {\r\n  const { id } = useParams();\r\n  const [recipeDetails, setRecipeDetails] = useState(null);\r\n  const [newRating, setNewRating] = useState('');\r\n  const [newReview, setNewReview] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchRecipeInformation = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n        setRecipeDetails(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch recipe information:', error);\r\n      }\r\n    };\r\n\r\n    fetchRecipeInformation();\r\n  }, [id]);\r\n\r\n  const submitRating = async () => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/api/recipes/${id}/ratings`, {\r\n        rating: parseInt(newRating),\r\n        user: 'Username',  // Replace with actual user data if available\r\n        review: newReview\r\n      });\r\n      // Append the new rating to the local state to update the UI immediately\r\n      setRecipeDetails({\r\n        ...recipeDetails,\r\n        ratings: [...recipeDetails.ratings, response.data]\r\n      });\r\n      setNewRating('');\r\n      setNewReview('');\r\n    } catch (error) {\r\n      console.error('Failed to post new rating:', error);\r\n    }\r\n  };\r\n\r\n  if (!recipeDetails) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Recipe Details</h1>\r\n      {/* Other details */}\r\n      <div>\r\n        <h2>Ratings</h2>\r\n        <ul>\r\n          {recipeDetails.ratings.map((rating, index) => (\r\n            <li key={index}>\r\n              {rating.user}: {rating.rating} stars\r\n              <p>{rating.review}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div>\r\n          <input type=\"number\" value={newRating} onChange={e => setNewRating(e.target.value)} placeholder=\"Rate 1-5\" />\r\n          <input type=\"text\" value={newReview} onChange={e => setNewReview(e.target.value)} placeholder=\"Review\" />\r\n          <button onClick={submitRating}>Submit Rating</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}