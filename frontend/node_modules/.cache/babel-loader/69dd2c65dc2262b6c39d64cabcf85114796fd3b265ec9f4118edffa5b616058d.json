{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\webAPI_cw\\\\frontend\\\\src\\\\components\\\\RecipeDetail.jsx\",\n  _s = $RefreshSig$();\n// // RecipeDetail.jsx\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//   const [recipe, setRecipe] = useState(null);\n//   const { id } = useParams(); // This hooks allow us to access the URL parameters\n\n//   useEffect(() => {\n//     async function fetchRecipe() {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/recipes/${id}`);\n//         setRecipe(response.data);\n//       } catch (error) {\n//         console.error('Failed to fetch recipe details:', error);\n//       }\n//     }\n\n//     fetchRecipe();\n//   }, [id]); // This effect runs when the `id` changes\n\n//   if (!recipe) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>{recipe.name}</h1>\n//       <p>{recipe.description}</p>\n//       {/* Display other recipe details */}\n//     </div>\n//   );\n// }\n\n// export default RecipeDetail;\n\n// BEST ONE SO FAR BELOW THIS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//   const { id } = useParams();\n//   const [recipeCard, setRecipeCard] = useState(null);\n//   const [recipeDetails, setRecipeDetails] = useState(null);\n\n//   useEffect(() => {\n//     const fetchRecipeDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\n//         setRecipeCard(response.data);\n//       } catch (error) {\n//         console.error('Failed to fetch recipe details:', error);\n//       }\n//     };\n\n//     const fetchRecipeInformation = async () => {\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n//       setRecipeDetails(infoResponse.data);\n//     };\n\n//     fetchRecipeDetails();\n//     fetchRecipeInformation();\n//   }, [id]);\n\n//   if (!recipeCard) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Recipe Details</h1>\n//       {/* Assuming recipeCard contains a URL to an image of the recipe */}\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\n\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\n//       <p>Nutritional Information:</p>\n//       <ul>\n//         {recipeDetails.nutrition.nutrients.map(nutrient => (\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\n//         ))}\n//       </ul>\n//       <p>Shopping List:</p>\n//       <ul>\n//         {recipeDetails.extendedIngredients.map(ing => (\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default RecipeDetail;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RecipeDetail() {\n//   const { id } = useParams();\n//   const [recipeDetails, setRecipeDetails] = useState(null);\n//   const [recipeCard, setRecipeCard] = useState(null);\n\n//   useEffect(() => {\n//     const fetchRecipeCard = async () => {\n//       const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\n//       setRecipeCard(cardResponse.data);\n//     };\n//     const fetchRecipeInformation = async () => {\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n//       setRecipeDetails(infoResponse.data);\n//     };\n\n//     fetchRecipeCard();\n//     fetchRecipeInformation();\n//   }, [id]);\n\n//   // Helper function to filter out only the nutrients we are interested in\n//   const getImportantNutrients = (nutrients) => {\n//     const needed = [\"Calories\", \"Protein\", \"Carbohydrates\", \"Fat\"];\n//     return nutrients.filter(nutrient => needed.includes(nutrient.title));\n//   };\n\n//   if (!recipeDetails || !recipeCard) {\n//     return <div>Loading...</div>;\n//   }\n\n//   const importantNutrients = recipeDetails ? getImportantNutrients(recipeDetails.nutrition.nutrients) : [];\n\n//   return (\n//     <div>\n//       <h1>Recipe Details</h1>\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\n//       <p>Health Score: {recipeDetails.healthScore}</p>\n//       <p>Nutritional Information:</p>\n//       <ul>\n//         {importantNutrients.map(nutrient => (\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\n//         ))}\n//       </ul>\n//       <p>Ingredients:</p>\n//       <ul>\n//         {recipeDetails.extendedIngredients.map(ing => (\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default RecipeDetail;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeDetail() {\n  _s();\n  var _recipeDetails$extend;\n  const {\n    id\n  } = useParams();\n  const [recipeDetails, setRecipeDetails] = useState(null);\n  const [recipeCard, setRecipeCard] = useState(null);\n  useEffect(() => {\n    const fetchRecipeCard = async () => {\n      const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\n      setRecipeCard(cardResponse.data);\n    };\n    const fetchRecipeInformation = async () => {\n      const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\n      if (infoResponse.data && infoResponse.data.nutrition && infoResponse.data.nutrition.nutrients) {\n        var _nutrients$find, _nutrients$find2, _nutrients$find3, _nutrients$find4;\n        const nutrients = infoResponse.data.nutrition.nutrients;\n        const nutrition = {\n          calories: (_nutrients$find = nutrients.find(n => n.title === 'Calories')) === null || _nutrients$find === void 0 ? void 0 : _nutrients$find.amount,\n          protein: (_nutrients$find2 = nutrients.find(n => n.title === 'Protein')) === null || _nutrients$find2 === void 0 ? void 0 : _nutrients$find2.amount,\n          carbs: (_nutrients$find3 = nutrients.find(n => n.title === 'Carbohydrates')) === null || _nutrients$find3 === void 0 ? void 0 : _nutrients$find3.amount,\n          fats: (_nutrients$find4 = nutrients.find(n => n.title === 'Fat')) === null || _nutrients$find4 === void 0 ? void 0 : _nutrients$find4.amount\n        };\n        infoResponse.data.nutritionInfo = nutrition; // Append the simplified nutrition info to the response data\n      }\n      setRecipeDetails(infoResponse.data);\n    };\n    fetchRecipeCard();\n    fetchRecipeInformation();\n  }, [id]);\n  if (!recipeDetails || !recipeCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: recipeCard.url,\n      alt: \"Recipe Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: recipeDetails.summary\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Difficulty: \", recipeDetails.veryHealthy ? 'Hard' : 'Easy']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Health Score: \", recipeDetails.healthScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nutritional Information:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), recipeDetails.nutritionInfo && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Calories: \", recipeDetails.nutritionInfo.calories]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Protein: \", recipeDetails.nutritionInfo.protein]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Carbs: \", recipeDetails.nutritionInfo.carbs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Fats: \", recipeDetails.nutritionInfo.fats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ingredients:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (_recipeDetails$extend = recipeDetails.extendedIngredients) === null || _recipeDetails$extend === void 0 ? void 0 : _recipeDetails$extend.map(ing => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [ing.name, \" (Quantity: \", ing.amount, \" \", ing.unit, \")\"]\n      }, ing.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n}\n_s(RecipeDetail, \"+f/XUEDWY0qkixz2wmeRsn+FNio=\", false, function () {\n  return [useParams];\n});\n_c = RecipeDetail;\nexport default RecipeDetail;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","RecipeDetail","_s","_recipeDetails$extend","id","recipeDetails","setRecipeDetails","recipeCard","setRecipeCard","fetchRecipeCard","cardResponse","get","data","fetchRecipeInformation","infoResponse","nutrition","nutrients","_nutrients$find","_nutrients$find2","_nutrients$find3","_nutrients$find4","calories","find","n","title","amount","protein","carbs","fats","nutritionInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","src","url","alt","dangerouslySetInnerHTML","__html","summary","veryHealthy","healthScore","extendedIngredients","map","ing","name","unit","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/webAPI_cw/frontend/src/components/RecipeDetail.jsx"],"sourcesContent":["// // RecipeDetail.jsx\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//   const [recipe, setRecipe] = useState(null);\r\n//   const { id } = useParams(); // This hooks allow us to access the URL parameters\r\n\r\n//   useEffect(() => {\r\n//     async function fetchRecipe() {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/recipes/${id}`);\r\n//         setRecipe(response.data);\r\n//       } catch (error) {\r\n//         console.error('Failed to fetch recipe details:', error);\r\n//       }\r\n//     }\r\n\r\n//     fetchRecipe();\r\n//   }, [id]); // This effect runs when the `id` changes\r\n\r\n//   if (!recipe) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>{recipe.name}</h1>\r\n//       <p>{recipe.description}</p>\r\n//       {/* Display other recipe details */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n\r\n// BEST ONE SO FAR BELOW THIS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//   const { id } = useParams();\r\n//   const [recipeCard, setRecipeCard] = useState(null);\r\n//   const [recipeDetails, setRecipeDetails] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecipeDetails = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\r\n//         setRecipeCard(response.data);\r\n//       } catch (error) {\r\n//         console.error('Failed to fetch recipe details:', error);\r\n//       }\r\n//     };\r\n\r\n//     const fetchRecipeInformation = async () => {\r\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n//       setRecipeDetails(infoResponse.data);\r\n//     };\r\n\r\n//     fetchRecipeDetails();\r\n//     fetchRecipeInformation();\r\n//   }, [id]);\r\n\r\n//   if (!recipeCard) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Recipe Details</h1>\r\n//       {/* Assuming recipeCard contains a URL to an image of the recipe */}\r\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\r\n\r\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\r\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\r\n//       <p>Nutritional Information:</p>\r\n//       <ul>\r\n//         {recipeDetails.nutrition.nutrients.map(nutrient => (\r\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\r\n//         ))}\r\n//       </ul>\r\n//       <p>Shopping List:</p>\r\n//       <ul>\r\n//         {recipeDetails.extendedIngredients.map(ing => (\r\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RecipeDetail() {\r\n//   const { id } = useParams();\r\n//   const [recipeDetails, setRecipeDetails] = useState(null);\r\n//   const [recipeCard, setRecipeCard] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchRecipeCard = async () => {\r\n//       const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\r\n//       setRecipeCard(cardResponse.data);\r\n//     };\r\n//     const fetchRecipeInformation = async () => {\r\n//       const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n//       setRecipeDetails(infoResponse.data);\r\n//     };\r\n\r\n//     fetchRecipeCard();\r\n//     fetchRecipeInformation();\r\n//   }, [id]);\r\n\r\n//   // Helper function to filter out only the nutrients we are interested in\r\n//   const getImportantNutrients = (nutrients) => {\r\n//     const needed = [\"Calories\", \"Protein\", \"Carbohydrates\", \"Fat\"];\r\n//     return nutrients.filter(nutrient => needed.includes(nutrient.title));\r\n//   };\r\n\r\n//   if (!recipeDetails || !recipeCard) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   const importantNutrients = recipeDetails ? getImportantNutrients(recipeDetails.nutrition.nutrients) : [];\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Recipe Details</h1>\r\n//       <img src={recipeCard.url} alt=\"Recipe Card\" />\r\n//       <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\r\n//       <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\r\n//       <p>Health Score: {recipeDetails.healthScore}</p>\r\n//       <p>Nutritional Information:</p>\r\n//       <ul>\r\n//         {importantNutrients.map(nutrient => (\r\n//           <li key={nutrient.title}>{nutrient.title}: {nutrient.amount}{nutrient.unit}</li>\r\n//         ))}\r\n//       </ul>\r\n//       <p>Ingredients:</p>\r\n//       <ul>\r\n//         {recipeDetails.extendedIngredients.map(ing => (\r\n//           <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default RecipeDetail;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction RecipeDetail() {\r\n    const { id } = useParams();\r\n    const [recipeDetails, setRecipeDetails] = useState(null);\r\n    const [recipeCard, setRecipeCard] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchRecipeCard = async () => {\r\n            const cardResponse = await axios.get(`http://localhost:5000/api/recipes/details/${id}`);\r\n            setRecipeCard(cardResponse.data);\r\n        };\r\n\r\n        const fetchRecipeInformation = async () => {\r\n            const infoResponse = await axios.get(`http://localhost:5000/api/recipes/information/${id}`);\r\n            if (infoResponse.data && infoResponse.data.nutrition && infoResponse.data.nutrition.nutrients) {\r\n                const nutrients = infoResponse.data.nutrition.nutrients;\r\n                const nutrition = {\r\n                    calories: nutrients.find(n => n.title === 'Calories')?.amount,\r\n                    protein: nutrients.find(n => n.title === 'Protein')?.amount,\r\n                    carbs: nutrients.find(n => n.title === 'Carbohydrates')?.amount,\r\n                    fats: nutrients.find(n => n.title === 'Fat')?.amount\r\n                };\r\n                infoResponse.data.nutritionInfo = nutrition;  // Append the simplified nutrition info to the response data\r\n            }\r\n            setRecipeDetails(infoResponse.data);\r\n        };\r\n\r\n        fetchRecipeCard();\r\n        fetchRecipeInformation();\r\n    }, [id]);\r\n\r\n    if (!recipeDetails || !recipeCard) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Recipe Details</h1>\r\n            <img src={recipeCard.url} alt=\"Recipe Card\" />\r\n            <div dangerouslySetInnerHTML={{ __html: recipeDetails.summary }}></div>\r\n            <p>Difficulty: {recipeDetails.veryHealthy ? 'Hard' : 'Easy'}</p>\r\n            <p>Health Score: {recipeDetails.healthScore}</p>\r\n            <p>Nutritional Information:</p>\r\n            {recipeDetails.nutritionInfo && (\r\n                <ul>\r\n                    <li>Calories: {recipeDetails.nutritionInfo.calories}</li>\r\n                    <li>Protein: {recipeDetails.nutritionInfo.protein}</li>\r\n                    <li>Carbs: {recipeDetails.nutritionInfo.carbs}</li>\r\n                    <li>Fats: {recipeDetails.nutritionInfo.fats}</li>\r\n                </ul>\r\n            )}\r\n            <p>Ingredients:</p>\r\n            <ul>\r\n                {recipeDetails.extendedIngredients?.map(ing => (\r\n                    <li key={ing.id}>{ing.name} (Quantity: {ing.amount} {ing.unit})</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeDetail;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACpB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,YAAY,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,6CAA4CP,EAAG,EAAC,CAAC;MACvFI,aAAa,CAACE,YAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}