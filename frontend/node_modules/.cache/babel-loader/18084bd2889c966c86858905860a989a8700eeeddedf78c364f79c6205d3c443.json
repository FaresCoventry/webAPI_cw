{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\webAPI_cw\\\\frontend\\\\src\\\\components\\\\RateRecipe.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n\n// function RateRecipe() {\n//     const { id } = useParams();\n//     const navigate = useNavigate();\n//     const [rating, setRating] = useState('');\n//     const [review, setReview] = useState('');\n//     const [recipe, setRecipe] = useState(null);\n\n//     useEffect(() => {\n//     const fetchRecipe = async () => {\n//         try {\n//             const { data } = await axios.get(`http://localhost:5000/api/recipes/${id}`);\n//             setRecipe(data);\n//         } catch (error) {\n//             console.error('Error fetching recipe:', error);\n//         }\n//     };\n\n//     fetchRecipe();\n// }, [id]);\n\n//     const submitRating = async () => {\n//         try {\n//             await axios.post(`http://localhost:5000/api/recipes/${id}/ratings`, {\n//                 rating,\n//                 user: \"newuser\", // this should ideally be dynamic based on logged-in user\n//                 review\n//             });\n//             alert('Rating submitted!');\n//             setRating('');\n//             setReview('');\n//             navigate(`/ratings/${id}`); // Refresh the page or navigate as needed\n//         } catch (error) {\n//             console.error('Error submitting rating:', error);\n//             alert('Failed to submit rating');\n//         }\n//     };\n\n//     if (!recipe) {\n//         return <div>Loading...</div>;\n//     }\n\n//     return (\n//         <div>\n//             <h1>Rate {recipe.title}</h1>\n//             <p>{recipe.description}</p>\n//             <div>\n//                 <label>Rating: </label>\n//                 <input type=\"number\" value={rating} onChange={e => setRating(e.target.value)} min=\"1\" max=\"5\" />\n//                 <label>Review: </label>\n//                 <textarea value={review} onChange={e => setReview(e.target.value)} />\n//                 <button onClick={submitRating}>Submit Rating</button>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default RateRecipe;\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RateRecipe() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [rating, setRating] = useState('');\n  const [review, setReview] = useState('');\n  const fetchRecipe = useCallback(async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/api/recipes/${id}`);\n      setRecipe(data);\n    } catch (error) {\n      console.error('Error fetching recipe:', error);\n    }\n  }, [id]); // dependency array includes `id` because it's used inside `fetchRecipe`\n\n  useEffect(() => {\n    fetchRecipe();\n  }, [fetchRecipe]); // now `fetchRecipe` is correctly listed as a dependency\n\n  const submitRating = async () => {\n    try {\n      await axios.post(`http://localhost:5000/api/recipes/${id}/ratings`, {\n        rating: parseInt(rating, 10),\n        user: 'newuser',\n        review\n      });\n      alert('Rating submitted!');\n      setRating('');\n      setReview('');\n      fetchRecipe();\n    } catch (error) {\n      console.error('Error submitting rating:', error);\n      alert('Failed to submit rating');\n    }\n  };\n  if (!recipe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: recipe.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: rating,\n        onChange: e => setRating(e.target.value),\n        min: \"1\",\n        max: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: review,\n        onChange: e => setReview(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitRating,\n        children: \"Submit Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(RateRecipe, \"7uDBeDxECwtNs5mB9nFdYH/ZJw8=\", false, function () {\n  return [useParams];\n});\n_c = RateRecipe;\nexport default RateRecipe;\nvar _c;\n$RefreshReg$(_c, \"RateRecipe\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","axios","jsxDEV","_jsxDEV","RateRecipe","_s","id","recipe","setRecipe","rating","setRating","review","setReview","fetchRecipe","data","get","error","console","submitRating","post","parseInt","user","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","title","type","value","onChange","e","target","min","max","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/webAPI_cw/frontend/src/components/RateRecipe.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function RateRecipe() {\r\n//     const { id } = useParams();\r\n//     const navigate = useNavigate();\r\n//     const [rating, setRating] = useState('');\r\n//     const [review, setReview] = useState('');\r\n//     const [recipe, setRecipe] = useState(null);\r\n\r\n//     useEffect(() => {\r\n    //     const fetchRecipe = async () => {\r\n    //         try {\r\n    //             const { data } = await axios.get(`http://localhost:5000/api/recipes/${id}`);\r\n    //             setRecipe(data);\r\n    //         } catch (error) {\r\n    //             console.error('Error fetching recipe:', error);\r\n    //         }\r\n    //     };\r\n\r\n    //     fetchRecipe();\r\n    // }, [id]);\r\n\r\n//     const submitRating = async () => {\r\n//         try {\r\n//             await axios.post(`http://localhost:5000/api/recipes/${id}/ratings`, {\r\n//                 rating,\r\n//                 user: \"newuser\", // this should ideally be dynamic based on logged-in user\r\n//                 review\r\n//             });\r\n//             alert('Rating submitted!');\r\n//             setRating('');\r\n//             setReview('');\r\n//             navigate(`/ratings/${id}`); // Refresh the page or navigate as needed\r\n//         } catch (error) {\r\n//             console.error('Error submitting rating:', error);\r\n//             alert('Failed to submit rating');\r\n//         }\r\n//     };\r\n\r\n//     if (!recipe) {\r\n//         return <div>Loading...</div>;\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Rate {recipe.title}</h1>\r\n//             <p>{recipe.description}</p>\r\n//             <div>\r\n//                 <label>Rating: </label>\r\n//                 <input type=\"number\" value={rating} onChange={e => setRating(e.target.value)} min=\"1\" max=\"5\" />\r\n//                 <label>Review: </label>\r\n//                 <textarea value={review} onChange={e => setReview(e.target.value)} />\r\n//                 <button onClick={submitRating}>Submit Rating</button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default RateRecipe;\r\n\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction RateRecipe() {\r\n    const { id } = useParams();\r\n    const [recipe, setRecipe] = useState(null);\r\n    const [rating, setRating] = useState('');\r\n    const [review, setReview] = useState('');\r\n\r\n    const fetchRecipe = useCallback(async () => {\r\n        try {\r\n            const { data } = await axios.get(`http://localhost:5000/api/recipes/${id}`);\r\n            setRecipe(data);\r\n        } catch (error) {\r\n            console.error('Error fetching recipe:', error);\r\n        }\r\n    }, [id]);  // dependency array includes `id` because it's used inside `fetchRecipe`\r\n\r\n    useEffect(() => {\r\n        fetchRecipe();\r\n    }, [fetchRecipe]);  // now `fetchRecipe` is correctly listed as a dependency\r\n\r\n    const submitRating = async () => {\r\n        try {\r\n            await axios.post(`http://localhost:5000/api/recipes/${id}/ratings`, {\r\n                rating: parseInt(rating, 10),\r\n                user: 'newuser',\r\n                review\r\n            });\r\n            alert('Rating submitted!');\r\n            setRating('');\r\n            setReview('');\r\n            fetchRecipe();\r\n        } catch (error) {\r\n            console.error('Error submitting rating:', error);\r\n            alert('Failed to submit rating');\r\n        }\r\n    };\r\n\r\n    if (!recipe) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{recipe.title}</h1>\r\n            <div>\r\n                <input type=\"number\" value={rating} onChange={e => setRating(e.target.value)} min=\"1\" max=\"5\" />\r\n                <textarea value={review} onChange={e => setReview(e.target.value)} />\r\n                <button onClick={submitRating}>Submit Rating</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RateRecipe;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}